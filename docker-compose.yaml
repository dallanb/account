version: "3.2"

services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: ./build/Dockerfile
    restart: on-failure
    volumes:
      - ./migrations:/home/app/migrations
      - ./bin:/home/app/bin
      - ./tests:/home/app/tests
      - ./seeds:/home/app/seeds
      - ./src:/home/app/src
      - ./statics:/home/app/statics
      - ./manage.py:/home/app/manage.py
      - ./setup.py:/home/app/setup.py
    env_file:
      - env/.env.app
    healthcheck:
      test: curl --fail -s app:5000/ping || exit 1
      interval: 60s
      timeout: 5s
      retries: 5
    depends_on:
      - cache
      - db
      - mongodb
      - kafka
      - zookeeper
    networks:
      - app-net
  cache:
    container_name: cache
    image: redis:6
    restart: unless-stopped
    volumes:
      - cache_data:/var/libs/redis
    env_file:
      - env/.env.cache
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - app-net
  db:
    container_name: db
    image: postgres:9.6
    volumes:
      - db_data:/var/lib/postgresql/data/
    env_file:
      - env/.env.db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U web" ]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - app-net
  kafka:
    container_name: kafka
    image: wurstmeister/kafka:latest
    restart: on-failure
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - env/.env.kafka
    depends_on:
      - zookeeper
    networks:
      - app-net
  mongodb:
    container_name: mongodb
    image: mongo:3.6
    volumes:
      - mongodb_data:/data/db
      - mongodb_home:/home/mongodb # this must be manually created and chown'd to 999 https://github.com/docker-library/mongo/issues/323
    #      - build/bin/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh
    #      - build/bin/reset-mongo.sh:/bin/reset-mongo.sh
    env_file:
      - env/.env.mongodb
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongodb:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - app-net
  web:
    container_name: web
    build:
      context: ./web
      dockerfile: ./web/build/Dockerfile
    restart: on-failure
    volumes:
      - ./statics/.:/usr/share/nginx/
    ports:
      - 80:80
    depends_on:
      - app
    networks:
      - app-net
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:latest
    restart: on-failure
    env_file:
      - env/.env.zookeeper
    networks:
      - app-net
volumes:
  db_data:
  cache_data:
  mongodb_data:
  mongodb_home:
networks:
  app-net:
    driver: bridge